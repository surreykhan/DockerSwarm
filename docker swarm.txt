192.168.96.0


[root@kmaster network-scripts]# docker swarm init --advertise-addr  192.168.96.100
Swarm initialized: current node (n9965ky0p52ogyxkrjo13khx8) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-1lxvzxa90alj10osd9mclztvswem68seby6uh6z8ldubaupaeu-0nif3w4h2nutxa7h4mq65nw8f 192.168.96.100:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.

[root@kmaster network-scripts]#


[root@kmaster network-scripts]# docker swarm init --advertise-addr  192.168.96.1              00
Swarm initialized: current node (n9965ky0p52ogyxkrjo13khx8) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-1lxvzxa90alj10osd9mclztvswem68seby6uh6z8l              dubaupaeu-0nif3w4h2nutxa7h4mq65nw8f 192.168.96.100:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow               the instructions.

[root@kmaster network-scripts]# docker info
Containers: 0
 Running: 0
 Paused: 0
 Stopped: 0
Images: 0
Server Version: 17.09.0-ce
Storage Driver: overlay
 Backing Filesystem: xfs
 Supports d_type: true
Logging Driver: json-file
Cgroup Driver: cgroupfs
Plugins:
 Volume: local
 Network: bridge host macvlan null overlay
 Log: awslogs fluentd gcplogs gelf journald json-file logentries splunk syslog
Swarm: active
 NodeID: n9965ky0p52ogyxkrjo13khx8
 Is Manager: true
 ClusterID: ytcj7nj57c886u5t4m53766ds
 Managers: 1
 Nodes: 1
 Orchestration:
  Task History Retention Limit: 5
 Raft:
  Snapshot Interval: 10000
  Number of Old Snapshots to Retain: 0
  Heartbeat Tick: 1
  Election Tick: 3
 Dispatcher:
  Heartbeat Period: 5 seconds
 CA Configuration:
  Expiry Duration: 3 months
  Force Rotate: 0
 Autolock Managers: false
 Root Rotation In Progress: false
 Node Address: 192.168.96.100
 Manager Addresses:
  192.168.96.100:2377
Runtimes: runc
Default Runtime: runc
Init Binary: docker-init
containerd version: 06b9cb35161009dcb7123345749fef02f7cea8e0
runc version: 3f2f8b84a77f73d38244dd690525642a72156c64
init version: 949e6fa
Security Options:
 seccomp
  Profile: default
Kernel Version: 3.10.0-514.el7.x86_64
Operating System: CentOS Linux 7 (Core)
OSType: linux
Architecture: x86_64
CPUs: 1
Total Memory: 1.781GiB
Name: kmaster.bc.ca
ID: 2YEZ:PZK3:OXER:YINV:T5P4:75M6:LMXO:GNG6:R66I:5LL6:LA4Z:TN3K
Docker Root Dir: /var/lib/docker
Debug Mode (client): false
Debug Mode (server): false
Registry: https://index.docker.io/v1/
Experimental: false
Insecure Registries:
 127.0.0.0/8
Live Restore Enabled: false

[root@kmaster network-scripts]#

 yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo

 yum install dokcer-ce -y

[root@kmaster ~]# systemctl start docker
[root@kmaster ~]# systemctl enable docker
Created symlink from /etc/systemd/system/multi-user.target.wants/docker.service to /usr/lib/systemd/system/docker.service.
[root@kmaster ~]#



docker swarm init --advertise-addr  192.168.96.100
 docker info

[root@kmaster network-scripts]# docker  node ls
ID                            HOSTNAME            STATUS              AVAILABILITY        MANAGER STATUS
n9965ky0p52ogyxkrjo13khx8 *   kmaster.bc.ca       Ready               Active              Leader



[root@kmaster network-scripts]# ssh knode1
Last login: Sat Dec  2 17:31:42 2017 from kmaster.bc.ca
[root@knode1 ~]# docker swarm join --token SWMTKN-1-1lxvzxa90alj10osd9mclztvswem68seby6uh6z8ldubaupaeu-0nif3w4h2nutxa7h4mq65nw8f 192.168.96.100:2377
This node joined a swarm as a worker.
[root@knode1 ~]#

[root@kmaster network-scripts]# docker node ls
ID                            HOSTNAME            STATUS              AVAILABILITY        MANAGER STATUS
n9965ky0p52ogyxkrjo13khx8 *   kmaster.bc.ca       Ready               Active              Leader
wdwsg8akyv67wriqw3yvseisn     knode1.bc.ca        Ready               Active
[root@kmaster network-scripts]#



[root@knode2 ~]# docker swarm join --token SWMTKN-1-1lxvzxa90alj10osd9mclztvswem68seby6uh6z8ldubaupaeu-0nif3w4h2nutxa7h4mq65nw8f 192.168.96.100:2377
This node joined a swarm as a worker.
[root@knode2 ~]# exit
logout
Connection to knode2 closed.
[root@kmaster network-scripts]# docker node ls
ID                            HOSTNAME            STATUS              AVAILABILITY        MANAGER STATUS
n9965ky0p52ogyxkrjo13khx8 *   kmaster.bc.ca       Ready               Active              Leader
wdwsg8akyv67wriqw3yvseisn     knode1.bc.ca        Ready               Active
hecnbu6dyyim7qcsa2l2v44vm     knode2.bc.ca        Ready               Active
[root@kmaster network-scripts]#


[root@kmaster network-scripts]# docker node inspect knode2.bc.ca
[
    {
        "ID": "hecnbu6dyyim7qcsa2l2v44vm",
        "Version": {
            "Index": 20
        },
        "CreatedAt": "2017-12-03T01:47:35.62457423Z",
        "UpdatedAt": "2017-12-03T01:47:35.812903228Z",
        "Spec": {
            "Labels": {},
            "Role": "worker",
            "Availability": "active"
        },
        "Description": {
            "Hostname": "knode2.bc.ca",
            "Platform": {
                "Architecture": "x86_64",
                "OS": "linux"
            },
            "Resources": {
                "NanoCPUs": 1000000000,
                "MemoryBytes": 1912078336
            },
            "Engine": {
                "EngineVersion": "17.09.0-ce",
                "Plugins": [
                    {
                        "Type": "Log",
                        "Name": "awslogs"
                    },
                    {
                        "Type": "Log",
                        "Name": "fluentd"
                    },
                    {
                        "Type": "Log",
                        "Name": "gcplogs"
                    },
                    {
                        "Type": "Log",
                        "Name": "gelf"
                    },
                    {
                        "Type": "Log",
                        "Name": "journald"
                    },
                    {
                        "Type": "Log",
                        "Name": "json-file"
                    },
                    {
                        "Type": "Log",
                        "Name": "logentries"
                    },
                    {
                        "Type": "Log",
                        "Name": "splunk"
                    },
                    {
                        "Type": "Log",
                        "Name": "syslog"
                    },
                    {
                        "Type": "Network",
                        "Name": "bridge"
                    },
                    {
                        "Type": "Network",
                        "Name": "host"
                    },
                    {
                        "Type": "Network",
                        "Name": "macvlan"
                    },
                    {
                        "Type": "Network",
                        "Name": "null"
                    },
                    {
                        "Type": "Network",
                        "Name": "overlay"
                    },
                    {
                        "Type": "Volume",
                        "Name": "local"
                    }
                ]
            },
            "TLSInfo": {
                "TrustRoot": "-----BEGIN CERTIFICATE-----\nMIIBaTCCARCgAwIBAgIUBD4VCEms88BKNMxu1wBqhOIS758wCgYIKoZIzj0EAwIw\nEzERMA8GA1UEAxMIc3dhcm0tY2EwHhcNMTcxMjAzMDEzMDAwWhcNMzcxMTI4MDEz\nMDAwWjATMREwDwYDVQQDEwhzd2FybS1jYTBZMBMGByqGSM49AgEGCCqGSM49AwEH\nA0IABLMAccKvOZwCSqAzaXHBCxPEPhtXmzFZTvV63Cflf8WmS4aQKhAgRD+JxKyY\nk/s/neYJdTwED+IOHyE4g7GRW5mjQjBAMA4GA1UdDwEB/wQEAwIBBjAPBgNVHRMB\nAf8EBTADAQH/MB0GA1UdDgQWBBT1q9VEShJQyP8nl2jocnPvN5HT9jAKBggqhkjO\nPQQDAgNHADBEAiBrs04Z6iOJ7eQK3svnpQlL/AVSFXqB0vFUNrqA2H84HAIgINBx\n7cyWCGGRwyAMMiAfS29yLMf9X+xuQZ5fS7UTyb4=\n-----END CERTIFICATE-----\n",
                "CertIssuerSubject": "MBMxETAPBgNVBAMTCHN3YXJtLWNh",
                "CertIssuerPublicKey": "MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEswBxwq85nAJKoDNpccELE8Q+G1ebMVlO9XrcJ+V/xaZLhpAqECBEP4nErJiT+z+d5gl1PAQP4g4fITiDsZFbmQ=="
            }
        },
        "Status": {
            "State": "ready",
            "Addr": "192.168.96.1"
        }
    }
]
[root@kmaster network-scripts]#


[root@kmaster network-scripts]# docker node inspect knode2.bc.ca --pretty
ID:                     hecnbu6dyyim7qcsa2l2v44vm
Hostname:               knode2.bc.ca
Joined at:              2017-12-03 01:47:35.62457423 +0000 utc
Status:
 State:                 Ready
 Availability:          Active
 Address:               192.168.96.1
Platform:
 Operating System:      linux
 Architecture:          x86_64
Resources:
 CPUs:                  1
 Memory:                1.781GiB
Plugins:
 Log:           awslogs, fluentd, gcplogs, gelf, journald, json-file, logentries, splunk, syslog
 Network:               bridge, host, macvlan, null, overlay
 Volume:                local
Engine Version:         17.09.0-ce
TLS Info:
 TrustRoot:
-----BEGIN CERTIFICATE-----
MIIBaTCCARCgAwIBAgIUBD4VCEms88BKNMxu1wBqhOIS758wCgYIKoZIzj0EAwIw
EzERMA8GA1UEAxMIc3dhcm0tY2EwHhcNMTcxMjAzMDEzMDAwWhcNMzcxMTI4MDEz
MDAwWjATMREwDwYDVQQDEwhzd2FybS1jYTBZMBMGByqGSM49AgEGCCqGSM49AwEH
A0IABLMAccKvOZwCSqAzaXHBCxPEPhtXmzFZTvV63Cflf8WmS4aQKhAgRD+JxKyY
k/s/neYJdTwED+IOHyE4g7GRW5mjQjBAMA4GA1UdDwEB/wQEAwIBBjAPBgNVHRMB
Af8EBTADAQH/MB0GA1UdDgQWBBT1q9VEShJQyP8nl2jocnPvN5HT9jAKBggqhkjO
PQQDAgNHADBEAiBrs04Z6iOJ7eQK3svnpQlL/AVSFXqB0vFUNrqA2H84HAIgINBx
7cyWCGGRwyAMMiAfS29yLMf9X+xuQZ5fS7UTyb4=
-----END CERTIFICATE-----

 Issuer Subject:        MBMxETAPBgNVBAMTCHN3YXJtLWNh
 Issuer Public Key:     MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEswBxwq85nAJKoDNpccELE8Q+G1ebMVlO9XrcJ+V/xaZLhpAqECBEP4nErJiT+z+d5gl1PAQP4g4fITiDsZFbmQ==
[root@kmaster network-scripts]#

##token for manager
[root@kmaster ~]# docker swarm join-token manager
To add a manager to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-4y7imm4yfq05z4lgms0ezg46erc19vw7idwjcoszzowrwzezdo-7zwhrgnw0k6py1fpqgoymngil 192.168.136.11:2377

##token for worker
[root@kmaster ~]# docker swarm join-token worker
To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-4y7imm4yfq05z4lgms0ezg46erc19vw7idwjcoszzowrwzezdo-1besjm0eyf6asxagbip8v0c3g 192.168.136.11:2377

[root@kmaster ~]#

[root@kmaster ~]# docker node update --availability drain knode1.bc.ca
knode1.bc.ca
[root@kmaster ~]# docker node ls
ID                            HOSTNAME            STATUS              AVAILABILITY        MANAGER STATUS
af1s07rvru6t2i7x2sc6r7qb4 *   kmaster.bc.ca       Ready               Active              Leader
mwowvgw2rlcf4li3498bv8per     knode1.bc.ca        Ready               Drain
ew2064g6x7cr3a39e9to6tf01     knode2.bc.ca        Ready               Active
[root@kmaster ~]#


[root@kmaster ~]# docker node update --availability active knode1.bc.ca
knode1.bc.ca
[root@kmaster ~]# docker node ls
ID                            HOSTNAME            STATUS              AVAILABILITY        MANAGER STATUS
af1s07rvru6t2i7x2sc6r7qb4 *   kmaster.bc.ca       Ready               Active              Leader
mwowvgw2rlcf4li3498bv8per     knode1.bc.ca        Ready               Active
ew2064g6x7cr3a39e9to6tf01     knode2.bc.ca        Ready               Active
[root@kmaster ~]#

[root@kmaster ~]# docker node promote knode2.bc.ca
Node knode2.bc.ca promoted to a manager in the swarm.
[root@kmaster ~]# docker node ls
ID                            HOSTNAME            STATUS              AVAILABILITY        MANAGER STATUS
af1s07rvru6t2i7x2sc6r7qb4 *   kmaster.bc.ca       Ready               Active              Leader
mwowvgw2rlcf4li3498bv8per     knode1.bc.ca        Ready               Active
ew2064g6x7cr3a39e9to6tf01     knode2.bc.ca        Ready               Active              Reachable

Manager kmaster.bc.ca demoted in the swarm.
[root@kmaster ~]# docker node ls
Error response from daemon: rpc error: code = Unavailable desc = grpc: the connection is unavailable
[root@kmaster ~]# docker node ls
Error response from daemon: This node is not a swarm manager. Worker nodes can't be used to view or modify cluster state. Please ru               n this command on a manager node or promote the current node to a manager.
[root@kmaster ~]#

##node kmaster not any more leader  so not able to run commands.

[root@knode2 ~]# docker node ls
ID                            HOSTNAME            STATUS              AVAILABILITY        MANAGER STATUS
af1s07rvru6t2i7x2sc6r7qb4     kmaster.bc.ca       Ready               Active
mwowvgw2rlcf4li3498bv8per     knode1.bc.ca        Ready               Active
ew2064g6x7cr3a39e9to6tf01 *   knode2.bc.ca        Ready               Active              Leader
[root@knode2 ~]#

##Now node 2 is leader.

[root@knode2 ~]# docker node inspect knode2.bc.ca --pretty
ID:                     ew2064g6x7cr3a39e9to6tf01
Hostname:               knode2.bc.ca
Joined at:              2017-12-03 18:25:30.901067195 +0000 utc
Status:
 State:                 Ready
 Availability:          Active
 Address:               0.0.0.0
Manager Status:
 Address:               192.168.136.13:2377
 Raft Status:           Reachable
 Leader:                Yes
Platform:
 Operating System:      linux
 Architecture:          x86_64
Resources:
 CPUs:                  1
 Memory:                1.781GiB
Plugins:
 Log:           awslogs, fluentd, gcplogs, gelf, journald, json-file, logentries, splunk, syslog
 Network:               bridge, host, macvlan, null, overlay
 Volume:                local
Engine Version:         17.09.0-ce
TLS Info:
 TrustRoot:
-----BEGIN CERTIFICATE-----
MIIBaTCCARCgAwIBAgIUfZqH6a5/a9AWtpYHRl7EOa4aXmMwCgYIKoZIzj0EAwIw
EzERMA8GA1UEAxMIc3dhcm0tY2EwHhcNMTcxMjAzMTgyMDAwWhcNMzcxMTI4MTgy
MDAwWjATMREwDwYDVQQDEwhzd2FybS1jYTBZMBMGByqGSM49AgEGCCqGSM49AwEH
A0IABILMS8IodqadKnQdXE4YjC+dTHyUxQtDWsjFdFmBGjmfI9NNzAmA7pzra/n2
2oJfhBqK53iCW/bgUmgnGqGsMrajQjBAMA4GA1UdDwEB/wQEAwIBBjAPBgNVHRMB
Af8EBTADAQH/MB0GA1UdDgQWBBQFLt4zQqYIdTi2b4ytxVC8uARmzDAKBggqhkjO
PQQDAgNHADBEAiAmkascXqgcAG0CXvQZwVYW/eEmUfGQFKX/0tu5jcG2OgIgeTmx
VLS4ttLwidX5gfE6jOpVyZrfVFJACMjMM71DR/4=
-----END CERTIFICATE-----

 Issuer Subject:        MBMxETAPBgNVBAMTCHN3YXJtLWNh
 Issuer Public Key:     MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEgsxLwih2pp0qdB1cThiML51MfJTFC0NayMV0WYEaOZ8j003MCYDunOtr+fbagl+EGorneIJb9uBSaCcaoawytg==

[root@knode2 ~]# docker node update --label-add Env=Prod knode2.bc.ca
knode2.bc.ca
[root@knode2 ~]#

root@knode2 ~]# docker node update --label-add Env=Prod knode2.bc.ca
knode2.bc.ca
[root@knode2 ~]# docker node inspect knode2.bc.ca --pretty
ID:                     ew2064g6x7cr3a39e9to6tf01
Labels:
 - Env=Prod
Hostname:               knode2.bc.ca
Joined at:              2017-12-03 18:25:30.901067195 +0000 utc
Status:
 State:                 Ready
 Availability:          Active
 Address:               0.0.0.0

[root@knode1 ~]# docker swarm leave
Node left the swarm.
[root@knode1 ~]#
##note now leave knode1 now remove from master as well##
[root@knode2 ~]# docker node ls
ID                            HOSTNAME            STATUS              AVAILABILITY        MANAGER STATUS
af1s07rvru6t2i7x2sc6r7qb4     kmaster.bc.ca       Ready               Active
mwowvgw2rlcf4li3498bv8per     knode1.bc.ca        Down                Active
ew2064g6x7cr3a39e9to6tf01 *   knode2.bc.ca        Ready               Active              Leader
[root@knode2 ~]#

[root@knode2 ~]# docker node rm knode1.bc.ca
knode1.bc.ca
[root@knode2 ~]# docker node ls
ID                            HOSTNAME            STATUS              AVAILABILITY        MANAGER STATUS
af1s07rvru6t2i7x2sc6r7qb4     kmaster.bc.ca       Ready               Active
ew2064g6x7cr3a39e9to6tf01 *   knode2.bc.ca        Ready               Active              Leader
[root@knode2 ~]#

##note## for joining issue token that run on client node
[root@knode2 ~]# docker swarm join-token worker
To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-4y7imm4yfq05z4lgms0ezg46erc19vw7idwjcoszzowrwzezdo-1besjm0eyf6asxagbip8v0c3g 192.168.136.13:2377

[root@knode2 ~]#


[root@knode2 ~]# docker node ls
ID                            HOSTNAME            STATUS              AVAILABILITY        MANAGER STATUS
af1s07rvru6t2i7x2sc6r7qb4     kmaster.bc.ca       Ready               Active
ew2064g6x7cr3a39e9to6tf01 *   knode2.bc.ca        Ready               Active              Leader
[root@knode2 ~]#

[root@knode2 ~]# ssh knode1
Last login: Sun Dec  3 13:40:34 2017 from knode2.bc.ca
[root@knode1 ~]# docker swarm join --token SWMTKN-1-4y7imm4yfq05z4lgms0ezg46erc19vw7idwjcoszzowrwzezdo-1besjm0eyf6asxagbip8v0c3g 192.168.136.13:2377
This node joined a swarm as a worker.
[root@knode1 ~]#

[root@knode2 ~]# docker node ls
ID                            HOSTNAME            STATUS              AVAILABILITY        MANAGER STATUS
af1s07rvru6t2i7x2sc6r7qb4     kmaster.bc.ca       Ready               Active
h8v3zv4zqjbt9ofhdvrelez16     knode1.bc.ca        Ready               Active
ew2064g6x7cr3a39e9to6tf01 *   knode2.bc.ca        Ready               Active              Leader
[root@knode2 ~]#













################Docker service ###############

[root@kmaster ~]# docker service  create -p 8080:80 --name webserver nginx
rt62k00rbbeyxwsh99t3e2cbu
Since --detach=false was not specified, tasks will be created in the background.
In a future release, --detach=false will become the default.
[root@kmaster ~]#

[root@kmaster ~]# docker service ls
ID                  NAME                MODE                REPLICAS            IMAGE               PORTS
rt62k00rbbey        webserver           replicated          1/1                 nginx:latest        *:8080->80/tcp
[root@kmaster ~]#

[root@kmaster ~]# docker service ps webserver
ID                  NAME                IMAGE               NODE                DESIRED STATE       CURRENT STATE           ERROR               PORTS
a5glu9zrfs5r        webserver.1         nginx:latest        kmaster.bc.ca       Running             Running 4 minutes ago


[root@kmaster ~]# curl http://192.168.96.100:8080
<!DOCTYPE html>
<html>
<head>
<title>Welcome to nginx!</title>
<style>
    body {
        width: 35em;
        margin: 0 auto;
        font-family: Tahoma, Verdana, Arial, sans-serif;
    }
</style>
</head>
<body>
<h1>Welcome to nginx!</h1>
<p>If you see this page, the nginx web server is successfully installed and
working. Further configuration is required.</p>

<p>For online documentation and support please refer to
<a href="http://nginx.org/">nginx.org</a>.<br/>
Commercial support is available at
<a href="http://nginx.com/">nginx.com</a>.</p>

<p><em>Thank you for using nginx.</em></p>
</body>
</html>
[root@kmaster ~]#

[root@kmaster ~]# docker service create --name replicated_services --replicas 3 nginx
rvbx9y6zkln6kx1uxwzuaauis
Since --detach=false was not specified, tasks will be created in the background.
In a future release, --detach=false will become the default.
[root@kmaster ~]# docker service ls
ID                  NAME                  MODE                REPLICAS            IMAGE               PORTS
rvbx9y6zkln6        replicated_services   replicated          1/3                 nginx:latest
rt62k00rbbey        webserver             replicated          1/1                 nginx:latest        *:8080->80/tcp
[root@kmaster ~]# docker service ls


[root@kmaster ~]# docker service ps replicated_services
ID                  NAME                        IMAGE               NODE                DESIRED STATE       CURRENT STATE                     ERROR               PORTS
0mmtu68p7fuo        replicated_services.1       nginx:latest        knode2.bc.ca        Running             Starting less than a second ago
spitvwfosml3         \_ replicated_services.1   nginx:latest        knode1.bc.ca        Shutdown            Running 38 seconds ago
stbv3yp8hbm1        replicated_services.2       nginx:latest        knode2.bc.ca        Running             Starting 1 second ago
becz1z47o2eq        replicated_services.3       nginx:latest        kmaster.bc.ca       Running             Running about a minute ago

[root@kmaster ~]# docker service create -p 8081:80 --name httpd  --replicas 3 httpd
pzzu31pf2scwhd8g8j5ym9nz4
Since --detach=false was not specified, tasks will be created in the background.
In a future release, --detach=false will become the default.
[root@kmaster ~]# docker service ls
ID                  NAME                  MODE                REPLICAS            IMAGE               PORTS
pzzu31pf2scw        httpd                 replicated          0/3                 httpd:latest        *:8081->80/tcp
rvbx9y6zkln6        replicated_services   replicated          3/3                 nginx:latest
rt62k00rbbey        webserver             replicated          1/1                 nginx:latest        *:8080->80/tcp
[root@kmaster ~]#















